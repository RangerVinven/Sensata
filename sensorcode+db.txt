import sys
from datetime import datetime
from time import sleep, time
import RPi.GPIO as GPIO
import psycopg2

# Constants
TRIG = 23
ECHO = 24
DISTANCE_THRESHOLD = 120  # in cm

# PostgreSQL connection details
DB_CONFIG = {
    "host": "your-database-host",
    "database": "your-database-name",
    "user": "your-username",
    "password": "your-password",
    "port": "your-port-number"  # Default PostgreSQL port is 5432
}

# Initialize GPIO
GPIO.setmode(GPIO.BCM)
GPIO.setup(TRIG, GPIO.OUT)
GPIO.setup(ECHO, GPIO.IN)

count = 0

def connect_to_db():
    """Establishes a connection to the PostgreSQL database."""
    try:
        connection = psycopg2.connect(**DB_CONFIG)
        print("Connected to the database successfully.")
        return connection
    except Exception as e:
        print(f"Failed to connect to the database: {e}")
        sys.exit(1)

def save_to_db(connection, object_count, timestamp):
    """Saves the detected object count and timestamp to the database."""
    try:
        cursor = connection.cursor()
        insert_query = """
        INSERT INTO object_counts (object_count, timestamp)
        VALUES (%s, %s);
        """
        cursor.execute(insert_query, (object_count, timestamp))
        connection.commit()
        cursor.close()
        print(f"Saved to database: Count={object_count}, Timestamp={timestamp}")
    except Exception as e:
        print(f"Failed to save data to the database: {e}")

def measure_distance():
    """Measure the distance using the ultrasonic sensor."""
    GPIO.output(TRIG, False)
    sleep(0.5)

    GPIO.output(TRIG, True)
    sleep(0.00001)
    GPIO.output(TRIG, False)

    pulse_start = time()
    while GPIO.input(ECHO) == 0:
        pulse_start = time()

    pulse_end = time()
    while GPIO.input(ECHO) == 1:
        pulse_end = time()

    pulse_duration = pulse_end - pulse_start
    distance = pulse_duration * 17150  # Speed of sound: 34300 cm/s divided by 2 (to and from object)
    return round(distance, 2)

try:
    # Connect to the database
    db_connection = connect_to_db()

    print("Starting ultrasonic monitoring. Press Ctrl+C to exit.")
    while True:
        distance = measure_distance()
        print(f"Measured Distance: {distance} cm")

        if distance < DISTANCE_THRESHOLD:
            count += 1
            timestamp = datetime.now()
            print(f"Object detected! Total Count: {count}")

            # Save data to the database
            save_to_db(db_connection, count, timestamp)

            sleep(1)  # Avoid rapid overcounting

except KeyboardInterrupt:
    print("\nCtrl-C pressed. Cleaning up GPIO and closing database connection.")
    GPIO.cleanup()
    if db_connection:
        db_connection.close()
    print("Database connection closed. Exiting.")
    sys.exit(0)